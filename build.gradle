buildscript {
    repositories {
        mavenCentral()
        mavenRepo urls: 'https://ci.canoo.com/nexus/content/groups/public'
    }

    dependencies {
        classpath "com.automatedlogic.gradle:gradle-idea-plugin:0.1"
    }
}


defaultTasks = ['test']

apply plugin: 'groovy'
apply plugin: 'code-quality'
apply plugin: com.automatedlogic.gradle.plugin.idea.IdeaGenerationPlugin

repositories {
    mavenCentral()
    mavenRepo urls: ["http://m2repo.spockframework.org/snapshots", "http://download.java.net/maven/2/"]
}

dependencies {
    groovy    "org.codehaus.groovy:groovy-all:1.7.0"
    testCompile   "org.spockframework:spock-core:0.4-SNAPSHOT"
    compile   "org.swinglabs:swingx:0.9.7"
    compile   "org.springframework:spring-context:3.0.0.RELEASE"
    compile   "org.springframework:spring-core:3.0.0.RELEASE"
    compile   "org.springframework:spring-beans:3.0.0.RELEASE"
    compile   'commons-logging:commons-logging:1.1.1'
    compile   group: 'log4j', name: 'log4j', version: '1.2.9', transitive: false
    testCompile "junit:junit:4.8.1"
    testRuntime 'net.sourceforge.cobertura:cobertura:1.9.4.1'
}

task wrapper(type: Wrapper) {
    gradleVersion = '0.9-preview-1'
    jarPath = 'wrapper'
}

// exclude task from analyzing test files
task codenarcTest (overwrite:true)


/*
Code Coverage. Eventually move to a plugin. 
*/
def cobSerFile="${project.buildDir}/cobertura.ser"
def srcOriginal="${sourceSets.main.classesDir}"
def srcCopy="${srcOriginal}-copy"

test.doFirst  {
    ant {
        // delete data file for Cobertura, otherwise coverage would be added
        delete(file:cobSerFile, failonerror:false)
        // delete copy of original classes
        delete(dir: srcCopy, failonerror:false)
        // import cobertura task, so it is available in the script
        taskdef(resource:'tasks.properties', classpath: configurations.testRuntime.asPath)
        // create copy (backup) of original class files
        copy(todir: srcCopy) {
            fileset(dir: srcOriginal)
        }
        // instrument the relevant classes in-place
        'cobertura-instrument'(datafile:cobSerFile) {
            fileset(dir: srcOriginal,
                   includes:"com/canoo/**/*.class",
                   excludes:"**/*Test.class")
        }
    }
}

test {
    systemProperties.put("net.sourceforge.cobertura.datafile", cobSerFile)
}

test.doLast {
    if (new File(srcCopy).exists()) {
        // replace instrumented classes with backup copy again
        ant {
            delete(file: srcOriginal)
            move(file: srcCopy,
                     tofile: srcOriginal)
        }
        // create cobertura reports
        ant.'cobertura-report'(destdir:"${project.buildDirName}/reports/coverage",
             format:'html', srcdir:"src/main/java", datafile:cobSerFile)
    }
}
