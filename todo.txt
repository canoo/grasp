Ziele:

- crud operationen führen zu einem sofortigen update der views
- unabhängige views
- meta-informationen werden im Presentation Model (PM) geteilt (nicht im view)
- PM enthält n Attribute
- Attribut enthält
  Properties dirty (derived), value (transient), modelValue (persistent), enabled, visible,
  description (derived from key through message bundle)
- GORM constraints im Attribut verfügbar (?)

- view:pm = m:n
- pm:attribut = 1:n

- Binding:
  möglichst einfach :-)
  view.bind pm
  leads to bi-directional binding
  "unbind"?

- "mini app"
  AttributEditor
  verwendbar in mehreren container views

x UI nach Client Shutdown wiederherstellbar, neue connection stellt altes UI wieder her (gestrichen)
- re-connect stellt transiente Werte wieder her

------------------------
Plan für 10.02.2010: (Dieter)
- wie wär's wenn wir uns beim nächsten Mal um die Abbildung der Relationen im PM kümmern?
  - binding auf book.publisher.name funktioniert nicht
    bsp: MasterDetailDemo: name textfield change ändert den Wert im Master view nicht.
    Loesungsidee: "syncCol" auf der Tabelle registriert sich auf Store

  - Also in unserem Beispiel um die Book : Author Beziehung (die wir noch auf n:m ausbauen könnten)

- DateEditor als erstes Beispiel eines AttributeEditors

- Mehrfachselektion
  Im Detail-View: Properties mit gleichen Values werden angezeigt, die anderen Felder bleiben leer. Bei Editieren werden alle selektierten Models
  verändert.
  Demoerweiterung: Tabelle mit Büchern + Tabelle mit Autoren, Selektion eines Buchs selektiert n Autoren und umgekehrt, eventuell filtern der zweiten
  Tabelle
- Filtern von Tabellen, Idee: mengenwertiges SelectedBlaPMs
  Tabelle mit allen Büchern von Dierk (programmatisch)
  Benutzer setzt zusätzlichen Filter
- Validierung der PMs
- Komplettierung der Attribute-Properties (Vorlage HECR Attribute)
  readOnly, mandatory, syntaxRegex, evtl. Read/Write Closures, enabled, visible, errormsgCodes, ...
- ULC-Integration

- Zurückschreiben auf die DomainObjects / Persistierung
  SaveService
- "Reload" der Domain Objects
- Remoting serverseitiges PM-Modell
- Push von neuen Informationen

Infrastrukture (Wenn hast du Langweile)
 - Cobertura
 - CodeNarc
 - GMetrics?
 - create a gradlew file

------------------------

note:
  Switch should become "Ref"

----
done:
----
- StoreEvent nur von den GORM instanz-methoden aus feuern. (ausser save())
- Store gibt nur Kopien der Listen zurück.
- deklaratives Binden von Tables an PM Klassen mit default added/deleted Notifikation
- deklaratives bidirektionales Binden an einen Switch
- deklaratives bidirektionales Binden der Attribute an Views
